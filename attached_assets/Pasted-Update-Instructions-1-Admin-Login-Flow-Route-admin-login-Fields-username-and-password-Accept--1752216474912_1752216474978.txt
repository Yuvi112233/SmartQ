Update Instructions
1️⃣ Admin Login Flow
Route: /admin/login

Fields: username and password

Accept hardcoded credentials:
e.g., username: admin, password: smartq123

On success: redirect to /admin/dashboard

2️⃣ WhatsApp Session (No QR Scan)
After login, check if admin’s WhatsApp session (via Baileys) is connected

If not:

Redirect to /admin/session

Show message: “Please connect your WhatsApp to start calling customers.”

Use persistent session (JSON file or memory-based store)

If session is connected:

Proceed to /admin/dashboard

3️⃣ Admin Dashboard
Route: /admin/dashboard

Fetch queue from GET /api/queue

Display:

Name

Phone number (do not mask)

Time added

Status (Waiting, Reached)

Actions:

Call Next

Removes the first customer from the queue

Sends a message on WhatsApp via Baileys

Opens WhatsApp chat if possible (via deep link or Web API)

Message placeholder:
"Hi [Name], it's your turn now. Please head to the shop."

Remove

Deletes customer without messaging

If customer clicks “Reached”, update their status in UI to ✅ Reached

4️⃣ Customer Flow
Route: /customer

Form:

Name (required)

Phone Number (required)

On submit:

Validate using RegEx (India: ^[6-9][0-9]{9}$)

Prevent duplicate if number already exists in current queue

POST data to /api/queue

Store number in localStorage

Redirect to /customer/queue

5️⃣ Customer Queue Page
Route: /customer/queue

Show:

Their queue position (recalculated on every update)

Names of other people (mask phone numbers)

Poll every 5 seconds or use Socket.IO to sync

When the user is first in queue, auto-redirect to:

bash
Copy
Edit
/customer/now
6️⃣ Customer "Now" Page
Route: /customer/now

Only show if that phone number is currently first in queue

Display:

arduino
Copy
Edit
✅ It's your turn!
Please reach the shop.
Button: [🟢 I Have Reached]

On click → POST /api/customer/reached/:phone

After submission: show
"Thank you! Please wait inside."

7️⃣ Backend API Routes
POST /api/admin/login → Admin login validation

POST /api/queue → Add new customer

GET /api/queue → Fetch full queue (admin)

GET /api/queue/customer/:phone → Fetch customer's queue position

DELETE /api/queue/:id → Remove a customer

POST /api/whatsapp/send/:phone → Send WhatsApp message (via Baileys)

POST /api/customer/reached/:phone → Customer confirmed arrival

✅ Built-in Test Cases / Problem Handling
🔹 1. Duplicate Entry by Same Customer
Block if phone number already exists in queue (status = "waiting")

🔹 2. Customer Reloads or Leaves Mid-Wait
Store phone number in localStorage

Re-fetch their status on load

🔹 3. WhatsApp Session Timeout / Admin Not Logged In
If Baileys session is inactive, show reconnect screen

Prevent WhatsApp API calls without active session

🔹 4. Customer Skips Turn / Doesn’t Click "Reached"
Add “Skip” or “Mark No-Show” on admin panel

(Optional) Auto-expire called customer after 5 minutes without confirmation

🔹 5. Two Customers Access /customer/now at Same Time
Backend verifies if the phone number is actually first in queue

Otherwise: return 403 or redirect to /customer/queue

🔹 6. Internet Disconnect
Use try-catch blocks in all fetches

Display offline warning

Resume state using localStorage

🔹 7. Fake Numbers or Incomplete Form
Use RegEx to validate Indian phone numbers

Optional: Limit entries to 1 per number per day/session

🔹 9. Multiple Admin Devices
Detect existing active WhatsApp session (Baileys)

If session exists elsewhere, prevent new logins or show warning

🔹 10. Customer Closes Tab After Being Called
If they return, match their number and auto-redirect to /customer/now

Admin can resend message manually

✨ Bonus (Optional But Preferred)
Tailwind CSS for styling (mobile-first UI)

Toasts for admin when customer reaches

Fully responsive layout (ideal for mobile and tablets)

Persist Baileys session to a .json file

Dark mode toggle on dashboard